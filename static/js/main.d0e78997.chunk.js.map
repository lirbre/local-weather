{"version":3,"sources":["App.js","index.js"],"names":["App","useState","location","setLocation","weather","setWeather","details","setDetails","icon","setIcon","main","setMain","getWeather","lat","long","a","require","config","process","axios","get","then","res","data","console","log","error","alert","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","urlIcon","className","name","description","temp","src","alt","FaTemperatureLow","temp_min","FaTemperatureHigh","temp_max","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA8DeA,MAvDf,WACE,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEIC,EAAU,uCAAG,WAAOC,EAAKC,GAAZ,SAAAC,EAAA,sDACfC,EAAQ,IAAUC,SACHC,mCACfC,IAAMC,IAAN,6DAAgEP,EAAhE,gBAA2EC,EAA3E,kBADeI,mCACf,kBACGG,MAAK,SAAAC,GACJjB,EAAWiB,EAAIC,MACfd,EAAQa,EAAIC,KAAKnB,QAAQ,GAAGI,MAC5BG,EAAQW,EAAIC,KAAKb,MACjBH,EAAWe,EAAIC,KAAKnB,QAAQ,IAC5BoB,QAAQC,IAAIH,EAAIC,SACf,SAAAG,GACDC,MAAM,oBAXK,2CAAH,wDAsBd,GAPAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCpB,EAAWoB,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WACrDhC,GAAY,QAEb,KAEc,IAAbD,EACJ,OACE,8BACI,0DAIJ,IAAMkC,EAAO,2CAAuC5B,EAAvC,WAEb,OACE,sBAAK6B,UAAU,eAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BjC,EAAQkC,OACpC,oBAAGD,UAAU,eAAb,UAA6B/B,EAAQI,KAArC,KAA6CJ,EAAQiC,eACrD,sBAAKF,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,UAA0B3B,EAAK8B,KAA/B,UACA,qBAAKC,IAAKL,EAASM,IAAI,oBAEzB,sBAAKL,UAAU,cAAf,UACE,oBAAGA,UAAU,cAAb,UAA2B,cAACM,EAAA,iBAAD,IAA3B,SAAqDjC,EAAKkC,SAA1D,UACA,oBAAGP,UAAU,cAAb,UAA2B,cAACQ,EAAA,kBAAD,IAA3B,SAAsDnC,EAAKoC,SAA3D,iBClDVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0e78997.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\n\nimport { FaTemperatureHigh } from \"@react-icons/all-files/fa/FaTemperatureHigh\";\nimport { FaTemperatureLow } from \"@react-icons/all-files/fa/FaTemperatureLow\";\n\nfunction App() {\n  const [location, setLocation] = useState(false);\n  const [weather, setWeather] = useState(false);\n  const [details, setDetails] = useState('');\n  const [icon, setIcon] = useState('');\n  const [main, setMain] = useState('');\n  \n  let getWeather = async (lat, long) => {\n    require('dotenv').config();\n    const apiKey = process.env.REACT_APP_OPEN_WEATHER_KEY;\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${apiKey}&units=metric`)\n      .then(res => {\n        setWeather(res.data);\n        setIcon(res.data.weather[0].icon);\n        setMain(res.data.main);\n        setDetails(res.data.weather[0])\n        console.log(res.data)\n      }, error => {\n        alert(\"set .env file\")\n      })\n  }\n  \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      getWeather(position.coords.latitude, position.coords.longitude);\n      setLocation(true);\n    })\n  }, [])\n\n  if (location === false) {\n  return (\n    <div>\n        <h1>please accept location</h1>\n    </div>\n  );\n  } else {\n    const urlIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`\n\n    return (\n      <div className=\"weather-wrap\">\n          <p className=\"city-text\">{weather.name}</p>\n        <p className=\"details-text\">{details.main}, {details.description}</p>\n        <div className=\"main-wrap\">\n          <p className=\"temp-text\">{main.temp}°</p>  \n          <img src={urlIcon} alt=\"weather-icon\"/>\n        </div>\n        <div className=\"values-wrap\">\n          <p className=\"values-text\"><FaTemperatureLow/> Max: {main.temp_min}°</p>\n          <p className=\"values-text\"><FaTemperatureHigh/> Min: {main.temp_max}°</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}